version: '3.8'

services:
  # PostgreSQL database (standalone)
  #postgres:
  #  image: postgres:15
  #  container_name: roguesim-postgres
  #  environment:
 #     - POSTGRES_DB=roguesim
  #    - POSTGRES_USER=rogueuser
  #    - POSTGRES_PASSWORD=nZrdLEehQFVTZ9ogVZXxmfpKOe68thkQTtwuVXaokQM=
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #  ports:
  #    - "5432:5432"
  #  healthcheck:
  #    test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
  #    interval: 5s
  #    timeout: 5s
  #    retries: 5
  #    start_period: 10s
  #  restart: unless-stopped
#postgres not needed for standalone
  # Main application
  app:
    build: .
    container_name: roguesim-app
    ports:
      - "8000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://rogueuser:nZrdLEehQFVTZ9ogVZXxmfpKOe68thkQTtwuVXaokQM=@postgres:5432/roguesim
      - SESSION_SECRET=development-secret-key-change-in-production-at-least-32-characters
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "/usr/local/bin/docker-health-check.js"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:

networks:
  default:
    driver: bridge