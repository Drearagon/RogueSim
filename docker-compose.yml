services:
  app:
    build: .
    ports:
      - "8000:5000"
    env_file:
      - ./.env.production
    environment:
      - NODE_ENV=production
      - PORT=5000
      - HOST=0.0.0.0
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@yourdomain.com}
    healthcheck:
      test: ["CMD", "node", "/usr/local/bin/docker-health-check.js"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

# COMMENTED OUT - NO LONGER USING LOCAL POSTGRES:
# postgres:
#   image: postgres:15
#   container_name: roguesim-postgres
#   environment:
#     - POSTGRES_DB=roguesim
#     - POSTGRES_USER=rogueuser
#     - POSTGRES_PASSWORD=${DB_PASSWORD:-nZrdLEehQFVTZ9ogVZXxmfpKOe68thkQTtwuVXaokQM=}
#   volumes:
#     - postgres_data:/var/lib/postgresql/data
#     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#   ports:
#     - "5432:5432"
#   healthcheck:
#     test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
#     interval: 5s
#     timeout: 5s
#     retries: 5
#     start_period: 10s
#   restart: unless-stopped

# COMMENTED OUT - PGADMIN NO LONGER NEEDED FOR LOCAL POSTGRES:
# # Optional: Database management UI
# pgadmin:
#   image: dpage/pgadmin4:latest
#   container_name: roguesim-pgadmin
#   environment:
#     - PGADMIN_DEFAULT_EMAIL=uplink@roguesim.com
#     - PGADMIN_DEFAULT_PASSWORD=roguesim123
#   ports:
#     - "8080:80"
#   depends_on:
#     postgres:
#       condition: service_healthy
#   restart: unless-stopped

# COMMENTED OUT - NO LONGER NEED POSTGRES VOLUME:
# volumes:
#   postgres_data: 
